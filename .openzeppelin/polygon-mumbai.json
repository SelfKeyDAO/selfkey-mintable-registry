{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2beEf4ae6B3024a1C2CD430EB1E4bf0324B6E8bd",
    "txHash": "0x31ff1494ed59f0bb1b91134550e112f548e30ef23554e93844c437c407ec6c2c"
  },
  "proxies": [
    {
      "address": "0xfAA8d6Ce9A457567bF81c00496DfC07959025bA4",
      "txHash": "0x86a8df5ab7037d52151de31516df82be28043376722859b382641184153c3e2f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7e4065ab285315ccf3ff4121791cc3d236027fb0246d0699ee23eb3884aa84b1": {
      "address": "0xeCbA71bEBcea25251CE0cfE84c8D20ac02102858",
      "txHash": "0xd3d18264bb78f39b0d168ffe68e91a62021d47a2cd9d5e7e736b255f54ee6abe",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "authorizedSigner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "SelfkeyMintableRegistryV1",
            "src": "contracts/upgrades/SelfkeyMintableRegistryV1.sol:23"
          },
          {
            "label": "_rewardEntries",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RewardEntry)757_storage)dyn_storage)",
            "contract": "SelfkeyMintableRegistryV1",
            "src": "contracts/upgrades/SelfkeyMintableRegistryV1.sol:24"
          },
          {
            "label": "_mintingEntries",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_array(t_struct(MintingEntry)762_storage)dyn_storage)",
            "contract": "SelfkeyMintableRegistryV1",
            "src": "contracts/upgrades/SelfkeyMintableRegistryV1.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MintingEntry)762_storage)dyn_storage": {
            "label": "struct MintingEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardEntry)757_storage)dyn_storage": {
            "label": "struct RewardEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(MintingEntry)762_storage)dyn_storage)": {
            "label": "mapping(address => struct MintingEntry[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(RewardEntry)757_storage)dyn_storage)": {
            "label": "mapping(address => struct RewardEntry[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintingEntry)762_storage": {
            "label": "struct MintingEntry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardEntry)757_storage": {
            "label": "struct RewardEntry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "task",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "task_id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "48348aff9e789db75687dc91f76eeb84402749015b9bbf7a17fcf36cb649fff8": {
      "address": "0x6bFAE6D808306E353eF75cE0e28F3947Cc1adB17",
      "txHash": "0x25229b43efb890fb405625fbe824284db9c533e8894516eec4440c45d1ae187c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "authorizedSigner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:23"
          },
          {
            "label": "_rewardEntries",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RewardEntry)788_storage)dyn_storage)",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:24"
          },
          {
            "label": "_mintingEntries",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_array(t_struct(MintingEntry)793_storage)dyn_storage)",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:25"
          },
          {
            "label": "authorizedCallers",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MintingEntry)793_storage)dyn_storage": {
            "label": "struct MintingEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardEntry)788_storage)dyn_storage": {
            "label": "struct RewardEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(MintingEntry)793_storage)dyn_storage)": {
            "label": "mapping(address => struct MintingEntry[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(RewardEntry)788_storage)dyn_storage)": {
            "label": "mapping(address => struct RewardEntry[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintingEntry)793_storage": {
            "label": "struct MintingEntry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardEntry)788_storage": {
            "label": "struct RewardEntry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "task",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "task_id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ec2185a5f646d971c31949c24b07a6efc25ae83c6da9b20fc30c49184fd69eb2": {
      "address": "0x79745E98BC6027BbEbF8790daA8Bd9B30c68d16B",
      "txHash": "0xf8c901d5f0bddf9e9860e0b6b71381afe4bfec9912dc6f232158c9fbaa56a9b1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "authorizedSigner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:23"
          },
          {
            "label": "_rewardEntries",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_struct(RewardEntry)788_storage)dyn_storage)",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:24"
          },
          {
            "label": "_mintingEntries",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_array(t_struct(MintingEntry)793_storage)dyn_storage)",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:25"
          },
          {
            "label": "authorizedCallers",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SelfkeyMintableRegistry",
            "src": "contracts/SelfkeyMintableRegistry.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MintingEntry)793_storage)dyn_storage": {
            "label": "struct MintingEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardEntry)788_storage)dyn_storage": {
            "label": "struct RewardEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(MintingEntry)793_storage)dyn_storage)": {
            "label": "mapping(address => struct MintingEntry[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(RewardEntry)788_storage)dyn_storage)": {
            "label": "mapping(address => struct RewardEntry[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MintingEntry)793_storage": {
            "label": "struct MintingEntry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RewardEntry)788_storage": {
            "label": "struct RewardEntry",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "task",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "task_id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "signer",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
